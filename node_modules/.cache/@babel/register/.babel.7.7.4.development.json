{
  "{\"sourceRoot\":\"C:\\\\Users\\\\gusta\\\\Desktop\\\\Graficando dados\\\\main\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\gusta\\\\Desktop\\\\Graficando dados\\\\main\",\"filename\":\"C:\\\\Users\\\\gusta\\\\Desktop\\\\Graficando dados\\\\main\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\gusta\\\\Desktop\\\\Graficando dados\\\\main\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\gusta\\Desktop\\Graficando dados\\main",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\gusta\\Desktop\\Graficando dados\\main",
      "filename": "C:\\Users\\gusta\\Desktop\\Graficando dados\\main\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\gusta\\Desktop\\Graficando dados\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\gusta\\Desktop\\Graficando dados\\main\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\gusta\\Desktop\\Graficando dados\\main\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\gusta\\Desktop\\Graficando dados\\main",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.entrantes_dia_5 = exports.entrantes_dia_4 = exports.entrantes_dia_3 = exports.entrantes_dia_2 = exports.entrantes_dia_1 = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar bd = new _sequelize[\"default\"]('usuarios', 'root', 'sintese>marketing', {\n  host: 'localhost',\n  dialect: 'mysql'\n});\nvar Usuario = bd.define('usuario', {\n  telefone: {\n    type: _sequelize[\"default\"].STRING,\n    allowNull: false\n  },\n  ddd: {\n    type: _sequelize[\"default\"].INTEGER,\n    allowNull: false\n  },\n  data_de_entrada: {\n    type: _sequelize[\"default\"].DATEONLY,\n    allowNull: false\n  }\n});\n\nfunction contar_entrantes(dia, mes, ano) {\n  return regeneratorRuntime.async(function contar_entrantes$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return regeneratorRuntime.awrap(Usuario.findAndCountAll({\n            where: {\n              data_de_entrada: ano + '-' + mes + '-' + dia\n            }\n          }));\n\n        case 2:\n          dados = _context.sent;\n          console.log(dados.count);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nvar hoje = new Date();\nvar entrantes_dia_1 = contar_entrantes(hoje.getDate() - 4, hoje.getMonth() + 1, hoje.getFullYear);\nexports.entrantes_dia_1 = entrantes_dia_1;\nvar entrantes_dia_2 = contar_entrantes(hoje.getDate() - 3, hoje.getMonth() + 1, hoje.getFullYear);\nexports.entrantes_dia_2 = entrantes_dia_2;\nvar entrantes_dia_3 = contar_entrantes(hoje.getDate() - 2, hoje.getMonth() + 1, hoje.getFullYear);\nexports.entrantes_dia_3 = entrantes_dia_3;\nvar entrantes_dia_4 = contar_entrantes(hoje.getDate() - 1, hoje.getMonth() + 1, hoje.getFullYear);\nexports.entrantes_dia_4 = entrantes_dia_4;\nvar entrantes_dia_5 = contar_entrantes(hoje.getDate() - 4, hoje.getMonth() + 1, hoje.getFullYear);\nexports.entrantes_dia_5 = entrantes_dia_5;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJkIiwic2VxdWVsaXplIiwiaG9zdCIsImRpYWxlY3QiLCJVc3VhcmlvIiwiZGVmaW5lIiwidGVsZWZvbmUiLCJ0eXBlIiwiU1RSSU5HIiwiYWxsb3dOdWxsIiwiZGRkIiwiSU5URUdFUiIsImRhdGFfZGVfZW50cmFkYSIsIkRBVEVPTkxZIiwiY29udGFyX2VudHJhbnRlcyIsImRpYSIsIm1lcyIsImFubyIsImZpbmRBbmRDb3VudEFsbCIsIndoZXJlIiwiZGFkb3MiLCJjb25zb2xlIiwibG9nIiwiY291bnQiLCJob2plIiwiRGF0ZSIsImVudHJhbnRlc19kaWFfMSIsImdldERhdGUiLCJnZXRNb250aCIsImdldEZ1bGxZZWFyIiwiZW50cmFudGVzX2RpYV8yIiwiZW50cmFudGVzX2RpYV8zIiwiZW50cmFudGVzX2RpYV80IiwiZW50cmFudGVzX2RpYV81Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxFQUFFLEdBQUksSUFBSUMscUJBQUosQ0FBYyxVQUFkLEVBQTBCLE1BQTFCLEVBQWtDLG1CQUFsQyxFQUF1RDtBQUMvREMsRUFBQUEsSUFBSSxFQUFFLFdBRHlEO0FBRS9EQyxFQUFBQSxPQUFPLEVBQUU7QUFGc0QsQ0FBdkQsQ0FBWjtBQUtBLElBQU1DLE9BQU8sR0FBR0osRUFBRSxDQUFDSyxNQUFILENBQVUsU0FBVixFQUFxQjtBQUNqQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQ05DLElBQUFBLElBQUksRUFBRU4sc0JBQVVPLE1BRFY7QUFFTkMsSUFBQUEsU0FBUyxFQUFFO0FBRkwsR0FEdUI7QUFLakNDLEVBQUFBLEdBQUcsRUFBRTtBQUNESCxJQUFBQSxJQUFJLEVBQUVOLHNCQUFVVSxPQURmO0FBRURGLElBQUFBLFNBQVMsRUFBRTtBQUZWLEdBTDRCO0FBU2pDRyxFQUFBQSxlQUFlLEVBQUU7QUFDYkwsSUFBQUEsSUFBSSxFQUFFTixzQkFBVVksUUFESDtBQUViSixJQUFBQSxTQUFTLEVBQUU7QUFGRTtBQVRnQixDQUFyQixDQUFoQjs7QUFlQSxTQUFlSyxnQkFBZixDQUFnQ0MsR0FBaEMsRUFBcUNDLEdBQXJDLEVBQTBDQyxHQUExQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQ0FDa0JiLE9BQU8sQ0FBQ2MsZUFBUixDQUF3QjtBQUNsQ0MsWUFBQUEsS0FBSyxFQUFFO0FBQ0hQLGNBQUFBLGVBQWUsRUFBRUssR0FBRyxHQUFHLEdBQU4sR0FBWUQsR0FBWixHQUFrQixHQUFsQixHQUF3QkQ7QUFEdEM7QUFEMkIsV0FBeEIsQ0FEbEI7O0FBQUE7QUFDSUssVUFBQUEsS0FESjtBQU1JQyxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsS0FBSyxDQUFDRyxLQUFsQjs7QUFOSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFTQSxJQUFJQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixFQUFYO0FBQ08sSUFBSUMsZUFBZSxHQUFHWixnQkFBZ0IsQ0FBQ1UsSUFBSSxDQUFDRyxPQUFMLEtBQWlCLENBQWxCLEVBQXFCSCxJQUFJLENBQUNJLFFBQUwsS0FBa0IsQ0FBdkMsRUFBMENKLElBQUksQ0FBQ0ssV0FBL0MsQ0FBdEM7O0FBQ0EsSUFBSUMsZUFBZSxHQUFHaEIsZ0JBQWdCLENBQUNVLElBQUksQ0FBQ0csT0FBTCxLQUFpQixDQUFsQixFQUFxQkgsSUFBSSxDQUFDSSxRQUFMLEtBQWtCLENBQXZDLEVBQTBDSixJQUFJLENBQUNLLFdBQS9DLENBQXRDOztBQUNBLElBQUlFLGVBQWUsR0FBR2pCLGdCQUFnQixDQUFDVSxJQUFJLENBQUNHLE9BQUwsS0FBaUIsQ0FBbEIsRUFBcUJILElBQUksQ0FBQ0ksUUFBTCxLQUFrQixDQUF2QyxFQUEwQ0osSUFBSSxDQUFDSyxXQUEvQyxDQUF0Qzs7QUFDQSxJQUFJRyxlQUFlLEdBQUdsQixnQkFBZ0IsQ0FBQ1UsSUFBSSxDQUFDRyxPQUFMLEtBQWlCLENBQWxCLEVBQXFCSCxJQUFJLENBQUNJLFFBQUwsS0FBa0IsQ0FBdkMsRUFBMENKLElBQUksQ0FBQ0ssV0FBL0MsQ0FBdEM7O0FBQ0EsSUFBSUksZUFBZSxHQUFHbkIsZ0JBQWdCLENBQUNVLElBQUksQ0FBQ0csT0FBTCxLQUFpQixDQUFsQixFQUFxQkgsSUFBSSxDQUFDSSxRQUFMLEtBQWtCLENBQXZDLEVBQTBDSixJQUFJLENBQUNLLFdBQS9DLENBQXRDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZ3VzdGFcXERlc2t0b3BcXEdyYWZpY2FuZG8gZGFkb3NcXG1haW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSdcclxuXHJcbmNvbnN0IGJkID0gIG5ldyBzZXF1ZWxpemUoJ3VzdWFyaW9zJywgJ3Jvb3QnLCAnc2ludGVzZT5tYXJrZXRpbmcnLCB7XHJcbiAgICBob3N0OiAnbG9jYWxob3N0JyxcclxuICAgIGRpYWxlY3Q6ICdteXNxbCdcclxufSlcclxuXHJcbmNvbnN0IFVzdWFyaW8gPSBiZC5kZWZpbmUoJ3VzdWFyaW8nLCB7XHJcbiAgICB0ZWxlZm9uZToge1xyXG4gICAgICAgIHR5cGU6IHNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGRkZDoge1xyXG4gICAgICAgIHR5cGU6IHNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2VcclxuICAgIH0sXHJcbiAgICBkYXRhX2RlX2VudHJhZGE6IHtcclxuICAgICAgICB0eXBlOiBzZXF1ZWxpemUuREFURU9OTFksXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZVxyXG4gICAgfVxyXG59KVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gY29udGFyX2VudHJhbnRlcyhkaWEsIG1lcywgYW5vKSB7XHJcbiAgICBkYWRvcyA9IGF3YWl0IFVzdWFyaW8uZmluZEFuZENvdW50QWxsKHtcclxuICAgICAgICB3aGVyZToge1xyXG4gICAgICAgICAgICBkYXRhX2RlX2VudHJhZGE6IGFubyArICctJyArIG1lcyArICctJyArIGRpYVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbiAgICBjb25zb2xlLmxvZyhkYWRvcy5jb3VudClcclxufVxyXG5cclxubGV0IGhvamUgPSBuZXcgRGF0ZSgpO1xyXG5leHBvcnQgbGV0IGVudHJhbnRlc19kaWFfMSA9IGNvbnRhcl9lbnRyYW50ZXMoaG9qZS5nZXREYXRlKCkgLSA0LCBob2plLmdldE1vbnRoKCkgKyAxLCBob2plLmdldEZ1bGxZZWFyKVxyXG5leHBvcnQgbGV0IGVudHJhbnRlc19kaWFfMiA9IGNvbnRhcl9lbnRyYW50ZXMoaG9qZS5nZXREYXRlKCkgLSAzLCBob2plLmdldE1vbnRoKCkgKyAxLCBob2plLmdldEZ1bGxZZWFyKVxyXG5leHBvcnQgbGV0IGVudHJhbnRlc19kaWFfMyA9IGNvbnRhcl9lbnRyYW50ZXMoaG9qZS5nZXREYXRlKCkgLSAyLCBob2plLmdldE1vbnRoKCkgKyAxLCBob2plLmdldEZ1bGxZZWFyKVxyXG5leHBvcnQgbGV0IGVudHJhbnRlc19kaWFfNCA9IGNvbnRhcl9lbnRyYW50ZXMoaG9qZS5nZXREYXRlKCkgLSAxLCBob2plLmdldE1vbnRoKCkgKyAxLCBob2plLmdldEZ1bGxZZWFyKVxyXG5leHBvcnQgbGV0IGVudHJhbnRlc19kaWFfNSA9IGNvbnRhcl9lbnRyYW50ZXMoaG9qZS5nZXREYXRlKCkgLSA0LCBob2plLmdldE1vbnRoKCkgKyAxLCBob2plLmdldEZ1bGxZZWFyKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "bd",
        "sequelize",
        "host",
        "dialect",
        "Usuario",
        "define",
        "telefone",
        "type",
        "STRING",
        "allowNull",
        "ddd",
        "INTEGER",
        "data_de_entrada",
        "DATEONLY",
        "contar_entrantes",
        "dia",
        "mes",
        "ano",
        "findAndCountAll",
        "where",
        "dados",
        "console",
        "log",
        "count",
        "hoje",
        "Date",
        "entrantes_dia_1",
        "getDate",
        "getMonth",
        "getFullYear",
        "entrantes_dia_2",
        "entrantes_dia_3",
        "entrantes_dia_4",
        "entrantes_dia_5"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,EAAE,GAAI,IAAIC,qBAAJ,CAAc,UAAd,EAA0B,MAA1B,EAAkC,mBAAlC,EAAuD;AAC/DC,EAAAA,IAAI,EAAE,WADyD;AAE/DC,EAAAA,OAAO,EAAE;AAFsD,CAAvD,CAAZ;AAKA,IAAMC,OAAO,GAAGJ,EAAE,CAACK,MAAH,CAAU,SAAV,EAAqB;AACjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEN,sBAAUO,MADV;AAENC,IAAAA,SAAS,EAAE;AAFL,GADuB;AAKjCC,EAAAA,GAAG,EAAE;AACDH,IAAAA,IAAI,EAAEN,sBAAUU,OADf;AAEDF,IAAAA,SAAS,EAAE;AAFV,GAL4B;AASjCG,EAAAA,eAAe,EAAE;AACbL,IAAAA,IAAI,EAAEN,sBAAUY,QADH;AAEbJ,IAAAA,SAAS,EAAE;AAFE;AATgB,CAArB,CAAhB;;AAeA,SAAeK,gBAAf,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0CC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACkBb,OAAO,CAACc,eAAR,CAAwB;AAClCC,YAAAA,KAAK,EAAE;AACHP,cAAAA,eAAe,EAAEK,GAAG,GAAG,GAAN,GAAYD,GAAZ,GAAkB,GAAlB,GAAwBD;AADtC;AAD2B,WAAxB,CADlB;;AAAA;AACIK,UAAAA,KADJ;AAMIC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACO,IAAIC,eAAe,GAAGZ,gBAAgB,CAACU,IAAI,CAACG,OAAL,KAAiB,CAAlB,EAAqBH,IAAI,CAACI,QAAL,KAAkB,CAAvC,EAA0CJ,IAAI,CAACK,WAA/C,CAAtC;;AACA,IAAIC,eAAe,GAAGhB,gBAAgB,CAACU,IAAI,CAACG,OAAL,KAAiB,CAAlB,EAAqBH,IAAI,CAACI,QAAL,KAAkB,CAAvC,EAA0CJ,IAAI,CAACK,WAA/C,CAAtC;;AACA,IAAIE,eAAe,GAAGjB,gBAAgB,CAACU,IAAI,CAACG,OAAL,KAAiB,CAAlB,EAAqBH,IAAI,CAACI,QAAL,KAAkB,CAAvC,EAA0CJ,IAAI,CAACK,WAA/C,CAAtC;;AACA,IAAIG,eAAe,GAAGlB,gBAAgB,CAACU,IAAI,CAACG,OAAL,KAAiB,CAAlB,EAAqBH,IAAI,CAACI,QAAL,KAAkB,CAAvC,EAA0CJ,IAAI,CAACK,WAA/C,CAAtC;;AACA,IAAII,eAAe,GAAGnB,gBAAgB,CAACU,IAAI,CAACG,OAAL,KAAiB,CAAlB,EAAqBH,IAAI,CAACI,QAAL,KAAkB,CAAvC,EAA0CJ,IAAI,CAACK,WAA/C,CAAtC",
      "sourceRoot": "C:\\Users\\gusta\\Desktop\\Graficando dados\\main",
      "sourcesContent": [
        "import sequelize from 'sequelize'\r\n\r\nconst bd =  new sequelize('usuarios', 'root', 'sintese>marketing', {\r\n    host: 'localhost',\r\n    dialect: 'mysql'\r\n})\r\n\r\nconst Usuario = bd.define('usuario', {\r\n    telefone: {\r\n        type: sequelize.STRING,\r\n        allowNull: false\r\n    },\r\n    ddd: {\r\n        type: sequelize.INTEGER,\r\n        allowNull: false\r\n    },\r\n    data_de_entrada: {\r\n        type: sequelize.DATEONLY,\r\n        allowNull: false\r\n    }\r\n})\r\n\r\nasync function contar_entrantes(dia, mes, ano) {\r\n    dados = await Usuario.findAndCountAll({\r\n        where: {\r\n            data_de_entrada: ano + '-' + mes + '-' + dia\r\n        }\r\n    })\r\n    console.log(dados.count)\r\n}\r\n\r\nlet hoje = new Date();\r\nexport let entrantes_dia_1 = contar_entrantes(hoje.getDate() - 4, hoje.getMonth() + 1, hoje.getFullYear)\r\nexport let entrantes_dia_2 = contar_entrantes(hoje.getDate() - 3, hoje.getMonth() + 1, hoje.getFullYear)\r\nexport let entrantes_dia_3 = contar_entrantes(hoje.getDate() - 2, hoje.getMonth() + 1, hoje.getFullYear)\r\nexport let entrantes_dia_4 = contar_entrantes(hoje.getDate() - 1, hoje.getMonth() + 1, hoje.getFullYear)\r\nexport let entrantes_dia_5 = contar_entrantes(hoje.getDate() - 4, hoje.getMonth() + 1, hoje.getFullYear)"
      ]
    },
    "sourceType": "script",
    "mtime": 1575066706916
  }
}